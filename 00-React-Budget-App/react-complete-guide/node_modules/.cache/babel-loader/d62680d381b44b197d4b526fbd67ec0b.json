{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmendez/Documents/School/Udemy/React_Course/React_The-Complete-Guide/00-React-Budget-App/react-complete-guide/src/components/Interface_Elements/Card.js\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  // To carry classnames with components you need to create a const of the classes you want to carry over and then assign the classes const to the div classname in the returned element below.\n  // The props.className is telling that any className you set to the returned div element will be added to the classes const names\n  //there will be an error if you leave the additional props.className undefined. it will apply a className of \"undefined\" to the element\n  const classes = 'card ' + props.className; // To use components as wrappers, you need to use the props.children prop to let the component have \"generic children\" that will be replaced with different data at a later time.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/sarahmendez/Documents/School/Udemy/React_Course/React_The-Complete-Guide/00-React-Budget-App/react-complete-guide/src/components/Interface_Elements/Card.js"],"names":["Card","props","classes","className","children"],"mappings":";AAAA,OAAO,YAAP;;;AAEA,MAAMA,IAAI,GAAIC,KAAD,IAAW;AACpB;AACA;AACA;AACA,QAAMC,OAAO,GAAG,UAAUD,KAAK,CAACE,SAAhC,CAJoB,CAMpB;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAED,OAAhB;AAAA,cAA0BD,KAAK,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CARD;;KAAMJ,I;AAUN,eAAeA,IAAf","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n    // To carry classnames with components you need to create a const of the classes you want to carry over and then assign the classes const to the div classname in the returned element below.\n    // The props.className is telling that any className you set to the returned div element will be added to the classes const names\n    //there will be an error if you leave the additional props.className undefined. it will apply a className of \"undefined\" to the element\n    const classes = 'card ' + props.className;\n\n    // To use components as wrappers, you need to use the props.children prop to let the component have \"generic children\" that will be replaced with different data at a later time.\n    return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}